name: CI - build, test, docker

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  packages: write    # required if you push to GHCR
  id-token: write    # optional if you use OIDC for registries

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore src/Presentation/Solutions.TodoList.WebApi/Solutions.TodoList.WebApi.csproj

      - name: Build
        run: dotnet build src/Presentation/Solutions.TodoList.WebApi/Solutions.TodoList.WebApi.csproj -c Release --no-restore

      - name: Test (if you have tests - adjust path)
        run: |
          # uncomment and point to your test projects
          # dotnet test src/Tests/YourTests.csproj -c Release --no-build

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref != 'refs/heads/skip-docker'  # optional guard
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image (GHCR)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/solutions.todolist.webapi:latest
            ghcr.io/${{ github.repository_owner }}/solutions.todolist.webapi:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
